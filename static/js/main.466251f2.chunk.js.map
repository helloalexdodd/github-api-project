{"version":3,"sources":["images/Octocat.jpg","images/ShatteredOctocat.png","constants/GithubApi.js","GlobalStyles.js","components/Header.js","components/Form.js","components/LoadingIndicator.js","components/ProfilePicture.js","components/RepoInfo.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GITHUB_API_URL","user","GITHUB_API_REPOS_URL","GlobalStyle","createGlobalStyle","Wrapper","styled","div","A","a","StyledHeader","header","H1","h1","P","p","FlexContainer","Header","props","userData","userStatus","H2","h2","name","login","followers","StyledForm","form","Label","label","StyledInput","input","Form","handleChange","userInput","fetchData","onSubmit","e","preventDefault","trim","htmlFor","type","id","placeholder","value","onChange","Div","LoadingIndicator","color","size","ImageContainer","ProfilePicture","promiseInProgress","usePromiseTracker","Image","img","avatar_url","href","html_url","target","rel","src","ShatteredOctocat","Octocat","alt","RepoInfoContainer","H3","h3","H4","h4","RepoInformation","ul","UserInfo","userRepos","length","map","repo","i","key","description","stargazers_count","watchers","forks","FormContainer","Main","handleData","RepoInfo","App","useState","setUserInput","setUserData","setUserRepos","setUserStatus","didMountRef","useRef","useEffect","document","getElementById","focus","current","url","trackPromise","axios","get","then","res","data","err","console","log","undefined","Array","isArray","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.466251f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Octocat.5d292e21.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ShatteredOctocat.f7bb3399.png\";","export const GITHUB_API_URL = user => `https://api.github.com/users/${user}`;\nexport const GITHUB_API_REPOS_URL = user => `https://api.github.com/users/${user}/repos`;\n\nexport default { GITHUB_API_URL, GITHUB_API_REPOS_URL }","import styled from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,html [type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}template{display:none}[hidden]{display:none}\n\n\t.clearfix:after {visibility: hidden; display: block; font-size: 0; content: ''; clear: both; height: 0; }\n\n\thtml { -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box;}\n\n\t*, *:before, *:after {box-sizing: inherit}\n\n\t.sr-only { position: absolute; width: 1px; height: 1px; margin: -1px; border: 0; padding: 0; white-space: nowrap; clip-path: inset(100%); clip: rect(0 0 0 0); overflow: hidden;}\n\n\thtml {\n\t\tfont-size: 125%;\n\t\tfont-family: 'Alata', sans-serif;\n  }\n  \n  body {\n\t\tmin-height: 100vh;\n\t}\n\t\n\tul,\n\tol {\n\t\tlist-style: none;\n\t\tpadding: 0;\n\t}\n\n\timg {\n\t\twidth: 100%;\n\t\theight: auto;\n\t}\n`;\n\nexport const Wrapper = styled.div`\n\tmax-width: 1080px;\n\twidth: 80%;\n\tmargin: 0 auto;\n`;\n\nexport const A = styled.a`\n\tfont-size: 1.6rem;\n\ttext-decoration: none;\n\tcolor: #1f1f1f;\n\n\t&:hover {\n\t\tcolor: #555;\n\t}\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport { Wrapper } from './../GlobalStyles';\n\nconst StyledHeader = styled.header`\n  margin-bottom: 50px;\n`;\n\nconst H1 = styled.h1`\nmargin-bottom: 10px;\nfont-size: 2rem;\n`;\n\nconst P = styled.p`\nmargin: 0;\n`;\n\nconst FlexContainer = styled.div`\nposition: relative;\ndisplay: flex;\njustify-content: space-between;\n\n&:after {\n  content: '';\n  position: absolute;\n  left: -5%;\n  bottom: -20px;\n  width: 110%;\n  height: 1px;\n  background: grey;\n}\n`;\n\nconst Header = props => {\n  const { userData, userStatus } = props;\n  const H2 = styled.h2`\n    margin: 0;\n    ${() => userStatus === 'Sorry your search has not returned any results.' ? 'font-size: 1.2rem' : null}\n  `;\n\n  return (\n    <StyledHeader>\n      <Wrapper>{ userData === '' || userStatus === 'Sorry your search has not returned any results.' ? <H1>GitSearch:</H1> : <H1>GitSearch for:</H1> }\n        <FlexContainer>\n          { userStatus === 'Sorry your search has not returned any results.' ? <H2>{userStatus}</H2> :\n           userData === '' ? <H2>A Github User Search Tool</H2> :\n          typeof userData === 'object' && userData.name ?  <H2>{userData.name}</H2> :\n          <H2>{userData.login}</H2> }\n          \n          { userData && userStatus !== 'Sorry your search has not returned any results.'? <P>Followers: {userData.followers}</P> : null }\n        </FlexContainer>\n      </Wrapper>\n    </StyledHeader>\n  )\n};\n\nexport default Header;","import React from 'react';\nimport { GITHUB_API_URL } from './../constants/GithubApi';\nimport styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  width: 50%;\n  @media (max-width: 600px) {\n    width: 80%;\n  }\n`;\n\nconst Label = styled.label`\n  font-size: 0.8rem;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  height: 40px;\n  margin: 10px 0;\n  font-size: .8rem;\n  font-family: 'Alata', sans-serif;\n\n  &[type=submit] {\n    background: #1f1f1f;\n    color: white;\n    border: none;\n  }\n`;\n\nconst Form = props => {\n  const { handleChange, userInput, fetchData } = props;\n  return (\n    <StyledForm \n      onSubmit={e => {\n        e.preventDefault();\n        fetchData(`${GITHUB_API_URL(userInput.trim())}`);\n      }\n    }>\n      <Label htmlFor=\"text\">Enter a Github Username or Organization:</Label>\n      <StyledInput type=\"text\" id=\"text\" name=\"text\" placeholder=\"eg. Octocat\" value={userInput} onChange={handleChange} />\n      <StyledInput type=\"submit\"value=\"Submit\" />\n    </StyledForm>\n  )\n};\n\nexport default Form;","import React from 'react';\nimport { BeatLoader } from 'react-spinners';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 100px;\n`;\n\nconst LoadingIndicator = () => {\n  return (\n    <Div>\n      <BeatLoader color={'#1f1f1f'} size={20} />\n    </Div>\n  )\n};\n\nexport default LoadingIndicator;","import React from 'react';\nimport LoadingIndicator from './LoadingIndicator';\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport Octocat from './../images/Octocat.jpg';\nimport ShatteredOctocat from './../images/ShatteredOctocat.png';\nimport styled from 'styled-components';\nimport { A } from '../GlobalStyles';\n\nconst ImageContainer = styled.div`\n  width: 40%;\n  margin: 0 50px 50px 50px;\n\n  @media (max-width: 600px) {\n   margin-top: 50px;\n  }\n`;\n\nconst ProfilePicture = props => {\n  const { userData, userStatus } = props;\n  const { promiseInProgress } = usePromiseTracker();\n  \n  const Image = styled.img`\n    max-width: 400px;\n    min-width: 200px;\n    ${() => userData.avatar_url ? 'border-radius: 50%;' : null};\n  `;\n  \n  return (\n    <ImageContainer>\n      {promiseInProgress && \n      <LoadingIndicator />}\n      {!promiseInProgress &&\n      <A href={userData.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n        <Image\n          src={ \n            userStatus === 'Sorry your search has not returned any results.' ? ShatteredOctocat :\n            typeof userData === 'object' ? userData.avatar_url :\n            Octocat \n          }\n          alt={ \n            userData === '' ? 'Github Mascot, Octocat' :\n            typeof userData === 'object' ? `profile picture of ${userData.name}` :\n            userData === 'Sorry your search has not returned any results.' ? 'a shattered drawing of the Github mascot, Octocat' :\n            'Github Mascot, Octocat' \n          }\n        />\n      </A>}\n    </ImageContainer>\n  )\n}\n\nexport default ProfilePicture;","import React from 'react';\n// import {BrowserRouter as Router, Route } from 'react-router-dom';\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport LoadingIndicator from './LoadingIndicator';\nimport styled from 'styled-components';\nimport { A } from '../GlobalStyles';\n\nconst RepoInfoContainer = styled.div`\n  margin-top: 100px;\n`;\n\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  margin: 20px 0;\n`;\n\n  const H3 = styled.h3`\n    position: relative;\n    margin-bottom: 50px;\n  \n    &:after {\n      content: '';\n      position: absolute;\n      left: -5%;\n      bottom: -20px;\n      width: 110%;\n      height: 1px;\n      background: grey;\n    }\n  `;\n  \nconst H4 = styled.h4`\n  font-size: 0.9rem;\n  font-style: italic;\n`;\n\nconst RepoInformation = styled.ul`\n  list-style: none;\n\n  li {\n    margin-top: 20px;\n    border-bottom: 1px solid grey;\n  }\n`;\n\nconst P = styled.p`\n  margin: 10px;\n`;\n\nconst UserInfo = props => {\n  const { userRepos, userData, userStatus } = props;\n  const { promiseInProgress } = usePromiseTracker();\n\n  return (\n    <>\n      {promiseInProgress && \n      <LoadingIndicator />}\n\n      {userStatus === 'Sorry your search has not returned any results.' || promiseInProgress ? null :\n      <RepoInfoContainer>\n\n        { userData && userData.name && userRepos.length ? <H3>{userData.name}'s Repositories</H3> :\n        userData && !userData.name && userRepos.length ? <H3>{userData.login}'s Repositories</H3> :\n        userData && !userRepos.length ? <H3>Sorry, this user doesn't have any public repositories</H3> :  null }\n\n        <RepoInformation>\n\n          { userData && userRepos.length ? userRepos.map((repo, i) => {\n            return <li key={i}>\n              <A href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{repo.name}</A>\n              \n              {repo.description ? <H4>{repo.description}</H4> : null}\n              \n              <FlexContainer>\n                <P>Stars: {repo.stargazers_count}</P>\n                <P>Watchers: {repo.watchers}</P>\n                <P>Forks: {repo.forks}</P>\n              </FlexContainer>\n            </li>\n          \n          }) : null }\n\n        </RepoInformation>\n      </RepoInfoContainer>}\n    </>\n  )\n};\n\nexport default UserInfo;","import React from 'react';\nimport {BrowserRouter as Router, Route } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Wrapper } from '../GlobalStyles';\nimport Form from './Form';\nimport ProfilePicture from './ProfilePicture';\nimport RepoInfo from './RepoInfo';\n\nconst FormContainer = styled.div`\n  display: flex;\n  min-height: 300px;\n\n  @media (max-width: 600px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst Main = props => {\n  const { handleChange, handleData, userInput, userData, userRepos, userStatus, fetchData } = props;\n\n  return (\n    <Wrapper>\n      <Router>\n        <FormContainer>\n          <Form\n            handleChange={handleChange}\n            fetchData={fetchData}\n            userInput={userInput}\n          />\n          <ProfilePicture userData={userData} userStatus={userStatus} />\n        </FormContainer>\n        {/* <Route path='/user/:id' render={(routeProps) => (\n            <RepoInfo\n              {...routeProps} \n              handleData={handleData}\n              fetchData={fetchData}\n              userData={userData}\n              userRepos={userRepos}\n              userStatus={userStatus}\n            />\n          )} \n        /> */}\n        <RepoInfo \n          handleData={handleData}\n          fetchData={fetchData}\n          userData={userData}\n          userRepos={userRepos}\n          userStatus={userStatus}\n        />\n      </Router>\n    </Wrapper>\n  )\n};\n\nexport default Main;","import React, { useState, useEffect, useRef } from 'react';\nimport { trackPromise } from 'react-promise-tracker';\nimport axios from 'axios';\nimport { GITHUB_API_REPOS_URL } from './constants/GithubApi';\nimport { GlobalStyle } from './GlobalStyles';\nimport Header from './components/Header';\nimport Main from './components/Main';\n\nconst App = () => {\n  const [userInput, setUserInput] =  useState('');\n  const [userData, setUserData] = useState('');\n  const [userRepos, setUserRepos] = useState('');\n  const [userStatus, setUserStatus] = useState('')\n  const didMountRef = useRef(false);\n\n  useEffect(() => {\n    document.getElementById('text').focus();\n  }, []);\n\n  useEffect(() => {\n    if (didMountRef.current) {\n      fetchData(`${GITHUB_API_REPOS_URL(userData.login)}`);\n    } else didMountRef.current = true;\n  }, [userData]);\n\n  const handleChange = e => setUserInput(e.target.value);\n\n  const fetchData = (url) => {\n    trackPromise(\n      axios.get(url)\n        .then(res => {\n          handleData(res.data);\n        }, err => {\n          console.log(err);\n          handleData();\n        })\n    );\n  };  \n\n  const handleData = (data) => {\n    if (data === undefined) {\n      setUserStatus('Sorry your search has not returned any results.');\n      setUserRepos('');\n      setUserInput('');\n    } else if (data.login) {\n      setUserStatus('');\n      setUserData(data);\n      setUserInput('');\n    } else if (Array.isArray(data)) {\n      setUserRepos(data);\n    }\n  }\n\n  return (\n    <>\n      <GlobalStyle />\n      <Header userData={userData} userStatus={userStatus} />\n      <Main \n        handleChange={handleChange}\n        handleData={handleData}\n        fetchData={fetchData}\n        userInput={userInput}\n        userData={userData}\n        userRepos={userRepos}\n        userStatus={userStatus}\n      />\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}